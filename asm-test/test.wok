type byte: u8
the port-in: byte
def foo (:: byte)
    [port-in @]
the x: s16
the y: u32
the f: int

;def f1 () []
;def f2 (int :: int) []
;def f3 (int :: int int) [this]
;def f4 (int bool :: int bool) []
;def f5 (int bool :: bool int) [alt]
;the v6: int
;def f6 (:: @int) [v6]
;def f7 (:: int) [v6 @]

def run () [foo,
 12
  (int :: byte)
   port-in !]

;for intp>val { has:[@] else:[0] }
;
;def deref-or-0 (^int :: int)
;    [intp>val]
;
;the answer: int
;
;type foo
;def bar (^int @foo ::) []
;
;def question (int :: int)
;    [0 > if:[42] else:[0]]
;
;dec do-syscall (any any any any any any int :: int)
;
;def exit (int)
;    [0 0 0 0 0 1 do-syscall,]
;
;def run ()
;    [41 exit]
;
;def old-run ()
;    [108 question answer !  answer@,]
;
;the pointer: ^@int
;
;def new-answer (^int)
;    [has:[answer !]]
;
